{"version":3,"sources":["utils/redux/reducers.ts","utils/theme.ts","pages/LandingPage.tsx","pages/ErrorPage/ErrorPage.tsx","pages/InfoPage.tsx","pages/App/App.tsx","utils/serviceWorker.ts","index.tsx","images/rhino.jpg","images/logo.png"],"names":["reducer","combineReducers","app","name","store","createStore","theme","createMuiTheme","palette","common","black","white","background","paper","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","responsiveFontSizes","withStyles","createStyles","root","height","width","padding","color","textAlign","itemContainer","overflow","backgroundColor","item","marginTop","button1","button2","borderColor","marginBottom","props","classes","mob","useTheme","useMediaQuery","Box","className","Paper","elevation","Fade","in","Grid","container","direction","alignItems","justify","src","logo","style","Typography","variant","join","Button","component","Link","to","ErrorPage","id","position","overflowY","boxShadow","webkitBoxShadow","outline","title","fontWeight","fontSize","lineHeight","subtitle","paddingTop","paddingBottom","header","content","button","bottom","display","back","left","paragraph","align","Zoom","timeout","Fab","App","ThemeProvider","Helmet","getState","path","exact","LandingPage","InfoPage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.af2bc1cf.chunk.js","sourcesContent":["import {combineReducers, createStore, Action } from 'redux';\n\n// App metadata\nconst app = (state={name:\"\"}, action: Action) => { // action has its type explicitely defined because it is not given a default to infer from\n    return {\n      name: 'Project Rhino'\n    }\n  };\n\nconst reducer = combineReducers({app});\n\nconst store = createStore(reducer);\nexport default store;\n\n","import {createMuiTheme, responsiveFontSizes} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        common: {\n        black: '#000',\n        white: '#fff'\n        },\n        background: {\n        paper: '#fff',\n        'default': '#fafafa'\n        },\n        primary: {\n        light: 'rgba(92, 92, 92, 1)',\n        main: 'rgba(51, 51, 51, 1)',\n        dark: 'rgba(12, 12, 12, 1)',\n        contrastText: '#fff'\n        },\n        secondary: {\n        light: 'rgba(255, 177, 92, 1)',\n        main: 'rgba(243, 128, 45, 1)',\n        dark: 'rgba(186, 82, 0, 1)',\n        contrastText: '#fff'\n        },\n        error: {\n        light: '#e57373',\n        main: 'rgba(255, 0, 0, 1)',\n        dark: '#d32f2f',\n        contrastText: '#fff'\n        },\n        text: {\n        primary: 'rgba(0, 0, 0, 0.87)',\n        secondary: 'rgba(0, 0, 0, 0.54)',\n        disabled: 'rgba(0, 0, 0, 0.38)',\n        hint: 'rgba(0, 0, 0, 0.38)'\n        }\n    }\n})\n\nexport default responsiveFontSizes(theme);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Box, Paper, useMediaQuery, Grid, Typography, Button, Theme, Fade} from '@material-ui/core';\nimport {useTheme, withStyles, WithStyles, createStyles} from '@material-ui/styles';\nimport background from '../images/rhino.jpg';\nimport logo from '../images/logo.png';\n\n// Landing page for browser and mobile. \n// Displays a title and subtitle over a background image, \n// as well as a call to action button and a secondary action button\n\n\n\n\nconst styles = ({palette} : Theme) => createStyles({ // Creates style from object\n    root : {\n        height: '100vh',\n        width: '100vw',\n        background: `url(${background})`,\n        padding: '0',\n        color : \"#fff\",\n        textAlign: \"center\",\n    },\n    itemContainer : {\n        height: '100%',\n        width: '100%',\n        padding: '10px',\n        overflow : \"hidden\",\n        backgroundColor : palette.primary.main\n\n    },\n    item : {\n        marginTop : '50px'\n    },\n    text : {\n        color : palette.secondary.main\n    },\n    button1 : {\n        padding: '20px',\n        width: '40%'\n    },\n    button2 : {\n        padding: '20px',\n        width: '40%',\n        borderColor : palette.secondary.main,\n        color : palette.secondary.main\n    },\n    '@media(min-width:1025px)' : { // BROWSER STYLING\n        root : {\n            padding : '50px',\n        },\n        itemContainer : {\n            width :'710px',\n        }\n    },\n    '@media(max-width:480px)' : {\n        button1 : {\n            padding: '20px',\n            marginBottom: '10px',\n            width: '100%'\n        },\n        button2 : {\n            padding: '20px',\n            width: '100%',\n        },\n    },\n});\n\ninterface props extends WithStyles<typeof styles> { // passes all relevant classes to prop interface\n\n}\n\nfunction LandingPage(props : props){\n    const {classes} = props;\n    const theme = useTheme();\n    const mob = useMediaQuery('(max-width:480px)')\n    return(\n        <Box className={classes.root}>\n                <Paper className={classes.itemContainer} elevation={20}>\n                    <Fade in={true}>\n                        <Grid className={classes.itemContainer} container direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n                            <Grid item container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.item}>\n                                <img src={logo} style={{width : \"30%\"}}/>\n                                <Typography variant=\"h1\" className={classes.text}><Typography variant=\"h5\">AI Core</Typography>Rhino</Typography>\n                            </Grid>\n                            <Grid item container direction=\"column\" justify=\"space-evenly\" className={classes.item}>\n                                <Typography variant=\"h3\" className={[classes.item, classes.text].join(\" \")}>Crowdsource intelligence to combat rhino poaching in Botswana</Typography>\n                                <Grid item container direction={mob ? \"column\" : \"row\"} justify=\"space-evenly\" alignItems=\"center\" className={classes.item}>\n                                    <Button color=\"secondary\" variant=\"contained\" className={classes.button1}>Contribute</Button>\n                                    <Button color=\"default\" variant=\"outlined\" className={classes.button2} component={Link} to=\"/about\">Learn More</Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Fade>\n                </Paper>\n        </Box>\n    );\n}\n\nexport default withStyles(styles)(LandingPage);\n","import React from 'react';\nimport './style.css';\n\nexport default function ErrorPage(){\n    return(\n        <div id=\"notfound\">\n            <div className=\"notfound\">\n                <div className=\"notfound-404\">\n                    <h3>Oops! Page not found</h3>\n                    <h1><span>4</span><span>0</span><span>4</span></h1>\n                </div>\n                <h2>we are sorry, but the page you requested was not found</h2>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {useTheme, withStyles, WithStyles, createStyles} from '@material-ui/styles';\nimport {Theme, Grid, Paper, useMediaQuery, Typography, Button, Fade, Fab, Zoom} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\nimport background from '../images/rhino.jpg';\nimport logo from '../images/logo.png';\n\nconst styles = ({palette} : Theme) => createStyles({ // Creates style from object\n    root : {\n        height: '100vh',\n        width: '100vw',\n        background: `url(${background})`,\n        padding: '0',\n        color : \"#fff\",\n        textAlign: \"center\",\n    },\n    itemContainer : {\n        position: 'relative',\n        height: '100%',\n        width: '100%',\n        padding: '25px',\n        overflowY : \"scroll\",\n        backgroundColor : palette.primary.main,\n        '&::-webkit-scrollbar': {\n            width: '0.4em'\n        },\n        '&::-webkit-scrollbar-track': {\n        boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\n        webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '&::-webkit-scrollbar-thumb': {\n        backgroundColor: 'rgba(0,0,0,.1)',\n        outline: '1px solid slategrey'\n        }\n\n    },\n    item : {\n        marginTop : '50px'\n    },\n    title : {\n        fontWeight : 500,\n        color : palette.secondary.main,\n        fontSize: '32px',\n        lineHeight : '44px'\n    },\n    subtitle : {\n        fontWeight : 300,\n        color : palette.secondary.light,\n        fontSize: '22px',\n        lineHeight : '30px',\n        paddingTop: '20px',\n        paddingBottom: '50px'\n    },\n    header : {\n        fontWeight : 300,\n        color : palette.secondary.main,\n        fontSize: '22px',\n        lineHeight : '30px'\n    },\n    content : {\n        fontWeight : 500,\n        color : palette.secondary.light,\n        fontSize: '16px',\n        lineHeight : '26px',\n        textAlign : 'left',\n        padding : '30px 0'\n    },\n    button : {\n        padding: '20px',\n        marginBottom: '10px',\n        bottom: '0',\n        width: '100%',\n        position: \"sticky\",\n        display : \"flex\",\n        alignItems : \"center\"\n    },\n    back : {\n        position: \"absolute\",\n        left: \"5%\",\n    },\n    '@media(min-width:1025px)' : { // BROWSER STYLING\n        root : {\n            padding : '50px',\n        },\n        itemContainer : {\n            width :'710px',\n        }\n    },\n});\n\ninterface props extends WithStyles<typeof styles>{\n\n};\n\nfunction InfoPage(props : props){\n    const {classes} = props;\n    const theme = useTheme();\n    const mob = useMediaQuery('(max-width:480px)')\n    return(\n        <Grid className={classes.root} justify=\"center\" alignItems=\"center\">\n                <Paper className={classes.itemContainer} elevation={20}>\n                    <Button className={classes.back} variant=\"outlined\" component={Link} to=\"/\">Back</Button>\n                    <Fade in={true}>\n                        <Grid direction=\"column\" justify=\"flex-start\" alignItems=\"center\">\n                            <img src={logo} style={{width : \"30%\"}}/>\n                            <br />\n                            <Typography paragraph>\n                                <Typography variant=\"h1\" align=\"center\" className={classes.title}>Rhino</Typography>\n                                <Typography variant=\"h3\" align=\"center\" className={classes.subtitle}>Crowdsource intelligence to combat rhino poaching in Botswana</Typography>\n                            </Typography>\n                            <Typography paragraph>\n                                <Typography variant=\"h2\" align=\"center\" className={classes.header}>Our Mission</Typography>\n                                <Typography variant=\"h6\" align=\"center\" className={classes.content}>In partnership with Adarga, we are going to crowdsource a dataset to help military operations to tackle rhino poaching in Botswana and North of the Zambezi river. Phase 1 consists of finding URLs that can point to potentially useful data sources. The next phase will consist of extracting data from these links, categorising it and cleaning it. This next phase will being within the next 2 weeks.</Typography>\n                            </Typography>\n                            <Typography paragraph>\n                                <Typography variant=\"h2\" align=\"center\" className={classes.header}>How you can help</Typography>\n                                <Typography variant=\"h6\" align=\"center\" className={classes.content}>All kinds of resources may be useful. For example you can submit articles, research papers, links to sources of satellite imagery or other telemetry data</Typography>\n                            </Typography>\n                            <Typography paragraph>\n                                <Typography variant=\"h2\" align=\"center\" className={classes.header}>Final Aim</Typography>\n                                <Typography variant=\"h6\" align=\"center\" className={classes.content}>A useful final output of this project would be code for producing different geographical heatmap overlays which then could be combined. For example, we could produce a heatmap of likely rhino watering holes, or heatmaps of difficult terrain for either poachers or rhinos. The eventual combination of these heatmaps will hopefully be able to inform where forces on the ground should deploy their resources.</Typography>\n                            </Typography>\n                            <Zoom in={true} timeout={500}>\n                                <Fab color=\"secondary\" className={classes.button} variant=\"extended\">Contribute</Fab>\n                            </Zoom>\n                        </Grid>\n                    </Fade>\n                </Paper>\n        </Grid>\n    );\n};\n\nexport default withStyles(styles)(InfoPage);","import React from 'react';\nimport {Helmet} from 'react-helmet';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport {ThemeProvider} from '@material-ui/core';\nimport {store} from '../../utils';\nimport LandingPage from '../LandingPage';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport InfoPage from '../InfoPage';\nimport {theme} from '../../utils';\n\n// APP PAGE - HANDLES ROUTING FOR ALL OF APP - PROVIDES STORE TO ALL COMPONENTS IN APP - HAS HELMET FOR META ETC.\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Router>\n          <Helmet>\n            <title>{store.getState().app.name}</title>\n            {/*viewport meta for scaling material UI components*/}\n            <meta \n              name=\"viewport\"\n              content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n            />\n          </Helmet>\n\n          <Switch>\n            <Route path='/' exact component={LandingPage} />\n            <Route path='/app' exact component={LandingPage} />\n            <Route path='/about' exact component={InfoPage} />\n            <Route path ='' component={ErrorPage} />\n          </Switch>\n        </Router>\n      </Provider>\n    </ThemeProvider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App/App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/rhino.1bd6920f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9deafaec.png\";"],"sourceRoot":""}